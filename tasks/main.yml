---
  - name: Create RHV Auth token
    ovirt_auth:
      ca_file: "{{ rhv_ca }}"
      password: "{{ rhv_password }}"
      url: "{{ rhv_url }}"
      username: "{{ rhv_username }}"
    no_log: true
    delegate_to: localhost

  - name: Start VM for testing
    ovirt_vms:
      auth:
        insecure: true
        password: "{{ rhv_password }}"
        username: "{{ rhv_username }}"
        url: "{{ rhv_url }}"
      cluster: "{{ rhv_cluster }}"
      name: "{{ inventory_hostname }}"
      state: running
    delegate_to: localhost

  - name: Put Foreman SELinux into permissive
    selinux:
      policy: targeted
      state: permissive

  - name: Grab bootdisk hammer-cli-foreman patch
    get_url:
      dest: /root/hammer.patch
      url: https://github.com/chris1984/hammer-cli-foreman/commit/a5734584598433f4d7071abc1b2b9fc871a2698b.patch

  - name: Apply patch to hammer-cli-foreman
    patch:
      dest: /opt/theforeman/tfm/root/usr/share/gems/gems/{{ hammer_version }}/lib/hammer_cli_foreman/hosts/common_update_options.rb
      remote_src: yes
      src: /root/hammer.patch
      strip: 1

  - name: Downloading fog-vsphere patch for testing
    get_url:
      dest: /root/fog.patch
      url: "{{ fogpatch_url }}"
    when: test_pr

  - name: Appling /root/fog.patch to fog-vsphere for testing
    patch:
      basedir: /opt/theforeman/tfm/root/usr/share/gems/gems/{{ fog_version }}/
      remote_src: yes
      src: /root/fog.patch
      strip: 1
    when: test_pr

  - name: Download requested version of fog-vsphere
    get_url:
      dest: /root/v{{ test_fog_version }}.tar.gz
      force: yes
      url: https://github.com/fog/fog-vsphere/archive/v{{ test_fog_version }}.tar.gz
    when: override_fog

  - name: Extract fog-vsphere archive into gem directory
    unarchive:
      dest: /opt/theforeman/tfm/root/usr/share/gems/gems/{{ fog_version }}
      extra_opts:
        - --overwrite
      src: /root/v{{ test_fog_version }}.tar.gz
    when: override_fog

  - name: Create fog-testing directory in root
    file:
      mode: 0755
      path: /root/fog-testing
      state: directory

  - name: Restart Katello/Foreman services
    command: foreman-maintain service restart
    args:
      chdir: /root
      creates: /root/fog-testing/restart_services
    no_log: True
    changed_when: True

  - name: Wait 60 seconds for services to be fully up
    wait_for: timeout=60
    delegate_to: localhost

  - name: Upgrade Katello/Foreman to latest
    yum:
       name: '*'
       state: latest
       update_cache: yes
    when: update_satellite

  - name: Run upgrade hook since Katello/Foreman has been upgraded
    command: foreman-installer --upgrade -v -s --disable-system-checks
    args:
      chdir: /root
      creates: /root/fog-testing/upgrade
    when: update_satellite
    register: installer_run

  - name: Generate new API cache data
    command: foreman-rake apipie:cache:index
    args:
      chdir: /root
      creates: /root/fog-testing/apicache_regen
    no_log: True
    changed_when: True

  - name: Check and make sure services are up
    command: hammer ping
    args:
      chdir: /root
      creates: /root/fog-testing/ping_check
    register: hping
    failed_when: hping.rc == 1

  - name: Start regression testing defined in create-hosts.yml
    block:
      - include: tasks/create-hosts.yml
        static: yes
    rescue:
      - debug:
           msg: An error occurred during the testing,rolling back to snapshot.
        when: is_debug is defined
      - include: tasks/remove-hosts.yml
        static: yes

  - name: Delete VMS before reverting snapshot to prevent name taken error
    include: tasks/remove-hosts.yml
    static: yes

  - name: Revert VM back to "Ready" snapshot
    ovirt_snapshots:
      snapshot_id: "{{ rhv_snapshotid }}"
      state: revert
      vm_name: "{{ inventory_hostname }}"
    delegate_to: localhost
    when: revert_vm

  - name: Stop VM after snapshot restore
    ovirt_vms:
      auth:
        insecure: true
        password: "{{ rhv_password }}"
        username: "{{ rhv_username }}"
        url: "{{ rhv_url }}"
      cluster: "{{ rhv_cluster }}"
      name: "{{ inventory_hostname }}"
      state: stopped
    delegate_to: localhost
